defaults:
  image: &image
    docker:
      - image: circleci/node
  yarn_cache: &yarn_cache
    key: yarn_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
  build_final_cache_partial: &build_final_cache_partial
    key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-all-
  archive_build: &archive_build
    name: Archive build
    command: tar cvf ../build.tar packages/@storefront/*/{dist,esnext}
  extract_build_archive: &extract_build_archive
    name: Extract archive
    command: |
      [[ ! -r ../build.tar ]] || tar xvf ../build.tar

  yarn_install: &yarn_install
    name: Install
    command: yarn
  setup_git: &setup_git
    name: Setup Git user
    command: |
      git config --global user.email "ops@groupbyinc.com"
      git config --global user.name "GroupBy Ops"
      git config --global push.default simple

  requires_build_structure: &requires_build_structure
    requires:
      - build_structure
  requires_build: &requires_build
    requires:
      - build_final

version: 2.1

jobs:
  generate_cache_key_file:
    <<: *image
    working_directory: ~/
    steps:
      - run: date +%s > workflow-start
      - persist_to_workspace:
          root: ~/
          paths:
            - workflow-start

  build:
    <<: *image
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - restore_cache:
          <<: *yarn_cache
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-
      - run: *extract_build_archive
      - run:
          name: Dependencies
          command: sudo apt install -y rsync
      - run:
          <<: *yarn_install
      - save_cache:
          <<: *yarn_cache
          paths:
            - ~/.cache/yarn
      - run:
          name: Build
          command: |
            package="${CIRCLE_JOB#build_}"
            package="${package//_/-}"

            cd "packages/@storefront/${package}"
            yarn build
      - run: *archive_build
      - save_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}
          paths:
            - ~/build.tar
  build_final:
    <<: *image
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_breadcrumbs-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_collections-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_core-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_details-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_did_you_mean-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_flux_capacitor-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_infinite_scroll-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_navigation-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_page_size-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_paging-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_products-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_query-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_recommendations-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_record_count-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_related_queries-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_sayt-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_sort-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_structure-
      - run: *extract_build_archive
      - restore_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-build_template-
      - run: *extract_build_archive
      - run: *archive_build
      - save_cache:
          key: build_cache-v{{ .Environment.CI_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}-{{ checksum "../workflow-start" }}-all-{{ epoch }}
          paths:
            - ~/build.tar
      - save_cache:
          <<: *yarn_cache
          paths:
            - ~/.cache/yarn

  unit_test:
    <<: *image
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - restore_cache:
          <<: *yarn_cache
      - restore_cache: *build_final_cache_partial
      - run: *extract_build_archive
      - run:
          <<: *yarn_install
      - run:
          name: Test
          command: |
            package="${CIRCLE_JOB#unit_test_}"
            package="${package//_/-}"

            cd "packages/@storefront/${package}"
            yarn test
      - run:
          name: Upload coverage
          command: |
            package="${CIRCLE_JOB#unit_test_}"
            package="${package//_/-}"

            cd "packages/@storefront/${package}"
            yarn uploadCoverage
  unit_test_final:
    <<: *image
    steps:
      - run: exit 0

  setup_release_branch:
    <<: *image
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - run:
          name: Compute branch name
          command: echo "release/$(cat ../workflow-start)" > ../branch-name
      - run:
          name: Create branch
          command: git checkout -b "$(cat ../branch-name)/master"
      - run:
          name: Push branch
          command: git push -u origin HEAD
      - persist_to_workspace:
          root: ~/
          paths:
            - branch-name

  docs:
    <<: *image
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - restore_cache:
          <<: *yarn_cache
      - restore_cache: *build_final_cache_partial
      - run: *extract_build_archive
      - run:
          <<: *yarn_install
      - run: *setup_git
      - run:
          name: Checkout release branch
          command:  git checkout "$(cat ../branch-name)/master"
      - run:
          name: Docs
          command: yarn docs
      - run:
          name: Commit
          command: |
            git add docs
            git commit -m "Generate docs" -m "[ci skip]"
      - run:
          name: Push
          command: git push -u origin HEAD

  release_base:
    <<: *image
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - restore_cache:
          <<: *yarn_cache
      - restore_cache: *build_final_cache_partial
      - run: *extract_build_archive
      - run:
          <<: *yarn_install
      - run: *setup_git
      - run:
          name: Checkout release branch
          command:  git checkout "$(cat ../branch-name)/master"
      - run:
          name: Install dependencies
          command: sudo apt install -y ed
      - run:
          name: Run release script
          command: |
            package="${CIRCLE_JOB#release_}"
            package="${package//_/-}"

            cd "packages/@storefront/${package}"

            release_type="$(sed -n '/## \[Unreleased\] \[\(.*\)\]/ s//\1/p' CHANGELOG.md)"

            touch ~/releases

            if ../../../scripts/release.sh; then
              echo "$package" "$release_type" >> ~/releases
            elif ec=$?; (( ec == 4 )); then
              exit 0
            else
              exit $ec
            fi
      - persist_to_workspace:
          root: ~/
          paths:
            - releases

  bump_dependency:
    <<: *image
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - run: *setup_git
      - run:
          name: Checkout release branch
          command:  git checkout "$(cat ../branch-name)/master"
      - run:
          name: Install dependencies
          command: sudo apt install -y ed
      - run:
          name: Run release script
          # TODO: Maybe add the version number in commit
          command: |
            package="${CIRCLE_JOB#bump_dependency_}"
            src="${package%%__*}"
            src="${src//_/-}"
            target="${package##*__}"
            target="${target//_/-}"
            release_type="$(sed -n 's/'"$src"' \(.*\)/\1/p' ../releases)"

            if [[ -n "$release_type" ]]; then
              ./scripts/update-dependency.sh "$src" "$release_type" "$target"

              git commit -am "Bump $src dependency in $target"
              git push -u origin HEAD
            fi

  publish:
    <<: *image
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - restore_cache: *build_final_cache_partial
      - run: *extract_build_archive
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Publish
          command: |
            package="${CIRCLE_JOB#release_}"
            package="${package//_/-}"

            cd "packages/@storefront/${package}"

            ../../../scripts/publish.sh -t tmp

workflows:
  version: 2

  build_test_release:
    jobs:
      - generate_cache_key_file:
          filters:
            branches:
              ignore: /release\/.*/
      - build:
          name: build_flux_capacitor
          requires:
            - generate_cache_key_file
      - build:
          name: build_core
          requires:
            - build_flux_capacitor
      - build:
          name: build_structure
          requires:
            - build_core
      - build:
          name: build_breadcrumbs
          <<: *requires_build_structure
      - build:
          name: build_collections
          <<: *requires_build_structure
      - build:
          name: build_details
          <<: *requires_build_structure
      - build:
          name: build_did_you_mean
          <<: *requires_build_structure
      - build:
          name: build_infinite_scroll
          <<: *requires_build_structure
      - build:
          name: build_navigation
          <<: *requires_build_structure
      - build:
          name: build_page_size
          <<: *requires_build_structure
      - build:
          name: build_paging
          <<: *requires_build_structure
      - build:
          name: build_products
          <<: *requires_build_structure
      - build:
          name: build_query
          <<: *requires_build_structure
      - build:
          name: build_recommendations
          <<: *requires_build_structure
      - build:
          name: build_record_count
          <<: *requires_build_structure
      - build:
          name: build_related_queries
          <<: *requires_build_structure
      - build:
          name: build_sayt
          <<: *requires_build_structure
      - build:
          name: build_sort
          <<: *requires_build_structure
      - build:
          name: build_template
          <<: *requires_build_structure
      - build_final:
          requires:
            - build_flux_capacitor
            - build_core
            - build_structure
            - build_breadcrumbs
            - build_collections
            - build_details
            - build_did_you_mean
            - build_infinite_scroll
            - build_navigation
            - build_page_size
            - build_paging
            - build_products
            - build_query
            - build_recommendations
            - build_record_count
            - build_related_queries
            - build_sayt
            - build_sort
            - build_template

      - unit_test:
          name: unit_test_flux_capacitor
          <<: *requires_build
      - unit_test:
          name: unit_test_core
          <<: *requires_build
      - unit_test:
          name: unit_test_structure
          <<: *requires_build
      - unit_test:
          name: unit_test_breadcrumbs
          <<: *requires_build
      - unit_test:
          name: unit_test_collections
          <<: *requires_build
      - unit_test:
          name: unit_test_details
          <<: *requires_build
      - unit_test:
          name: unit_test_did_you_mean
          <<: *requires_build
      - unit_test:
          name: unit_test_infinite_scroll
          <<: *requires_build
      - unit_test:
          name: unit_test_navigation
          <<: *requires_build
      - unit_test:
          name: unit_test_page_size
          <<: *requires_build
      - unit_test:
          name: unit_test_paging
          <<: *requires_build
      - unit_test:
          name: unit_test_products
          <<: *requires_build
      - unit_test:
          name: unit_test_query
          <<: *requires_build
      - unit_test:
          name: unit_test_recommendations
          <<: *requires_build
      - unit_test:
          name: unit_test_record_count
          <<: *requires_build
      - unit_test:
          name: unit_test_related_queries
          <<: *requires_build
      - unit_test:
          name: unit_test_sayt
          <<: *requires_build
      - unit_test:
          name: unit_test_sort
          <<: *requires_build
      - unit_test:
          name: unit_test_template
          <<: *requires_build
      - unit_test_final:
          requires:
            - unit_test_flux_capacitor
            - unit_test_core
            - unit_test_structure
            - unit_test_breadcrumbs
            - unit_test_collections
            - unit_test_details
            - unit_test_did_you_mean
            - unit_test_infinite_scroll
            - unit_test_navigation
            - unit_test_page_size
            - unit_test_paging
            - unit_test_products
            - unit_test_query
            - unit_test_recommendations
            - unit_test_record_count
            - unit_test_related_queries
            - unit_test_sayt
            - unit_test_sort
            - unit_test_template

      - setup_release_branch:
          requires:
            - unit_test_final
          filters:
            branches:
              only:
                - master
                - /SF-1143(-.*)?/

      - docs:
          requires:
            - setup_release_branch

      - release_base:
          name: release_flux_capacitor
          requires:
            - docs
      - publish:
          name: publish_flux_capacitor
          requires:
            - release_flux_capacitor

      - bump_dependency:
          name: bump_dependency_flux_capacitor__core
          requires:
            - publish_flux_capacitor
      - release_base:
          name: release_core
          requires:
            - bump_dependency_flux_capacitor__core
